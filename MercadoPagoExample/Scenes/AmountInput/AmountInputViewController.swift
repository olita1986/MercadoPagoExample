//
//  AmountInputViewController.swift
//  MercadoPagoExample
//
//  Created by Nisum on 1/27/19.
//  Copyright (c) 2019 Nisum. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol AmountInputDisplayLogic: class {
    func displayEnabledContinueButton()
    func displayDisabledContinueButton()
}

class AmountInputViewController: UIViewController, AmountInputDisplayLogic {
    var interactor: AmountInputBusinessLogic?
    var router: (NSObjectProtocol & AmountInputRoutingLogic & AmountInputDataPassing)?

    @IBOutlet weak var continueButton: UIButton!
    @IBOutlet weak var amountTextField: UITextField!
    // MARK: Object lifecycle

    override init(nibName nibNameOrNil: String?, bundle nibBundleOrNil: Bundle?) {
        super.init(nibName: nibNameOrNil, bundle: nibBundleOrNil)
        setup()
    }

    required init?(coder aDecoder: NSCoder) {
        super.init(coder: aDecoder)
        setup()
    }

    // MARK: Setup

    private func setup() {
        let viewController = self
        let interactor = AmountInputInteractor()
        let presenter = AmountInputPresenter()
        let router = AmountInputRouter()
        viewController.interactor = interactor
        viewController.router = router
        interactor.presenter = presenter
        presenter.viewController = viewController
        router.viewController = viewController
        router.dataStore = interactor
    }

    // MARK: View lifecycle

    override func viewDidLoad() {
        super.viewDidLoad()
        setupViews()
    }

    func setupViews() {
        title = "Enter Amount"
        setupGestureRecognizer()
        setupAmountTextField()
        setupContinueButton()
    }

    func setupGestureRecognizer() {
        let tap = UITapGestureRecognizer(target: self, action: #selector(dismissKeyboard))
        view.addGestureRecognizer(tap)
    }

    func setupAmountTextField() {
        amountTextField.delegate = self
        amountTextField.addTarget(self, action: #selector(textFieldDidChange(_:)), for: .editingChanged)
    }

    func setupContinueButton() {
        continueButton.isEnabled = false
        continueButton.backgroundColor = .gray
    }

    @objc private func textFieldDidChange(_ textField: UITextField) {
        guard let text = textField.text else { return }
        interactor?.textFieldDidChange(text: text)
    }

    @objc func dismissKeyboard() {
        view.endEditing(true)
    }

    @IBAction func continueButtonPressed(_ sender: Any) {
        print("pressed")
        dismissKeyboard()
        router?.routeToPaymentSelection()
    }

    func displayEnabledContinueButton() {
        continueButton.isEnabled = true
        continueButton.backgroundColor = UIColor(red: 0.457, green: 0.819, blue: 1, alpha: 1)
    }

    func displayDisabledContinueButton() {
        setupContinueButton()
    }
}

extension AmountInputViewController: UITextFieldDelegate {

}
