//
//  BankSelectionInteractor.swift
//  MercadoPagoExample
//
//  Created by Nisum on 1/27/19.
//  Copyright (c) 2019 Nisum. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol BankSelectionBusinessLogic {
    func getBankIssuers()
    func getInstallments(request: BankSelection.Installment.Request)
}

protocol BankSelectionDataStore {
    var bankIssuers: BanksResponse! { get set }
    var installmentsResponse: InstallmentsResponse! { get set }
}

class BankSelectionInteractor: BankSelectionBusinessLogic, BankSelectionDataStore {
    var presenter: BankSelectionPresentationLogic?
    var worker: BankSelectionWorker?

    var bankIssuers: BanksResponse!
    var installmentsResponse: InstallmentsResponse!

    let mpeApi: MPEApi

    init(mpeApi: MPEApi = MPEApi()) {
        self.mpeApi = mpeApi
    }

    func getBankIssuers() {
        let response = BankSelection.BankIssuers.Response(bankIssuersResponse: bankIssuers)
        presenter?.presentView(response: response)
    }

    func getInstallments(request: BankSelection.Installment.Request) {
        mpeApi.getInstallments(withPaymentMethodId: "", amount: "", issuerId: "") { [weak self](installments) in
            if let installmentsResponse = installments {
                self?.installmentsResponse = installmentsResponse
                self?.presenter?.presentInstallments()
            }
        }
    }
}
